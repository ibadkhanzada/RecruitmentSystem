// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecruitmentSystem.Models;

#nullable disable

namespace RecruitmentSystem.Migrations
{
    [DbContext(typeof(RecruitmentSystemDbContext))]
    [Migration("20250803102838_AddApplicantsRequestTable")]
    partial class AddApplicantsRequestTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecruitmentSystem.Models.Applicant", b =>
                {
                    b.Property<string>("ApplicantId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ApplicantId")
                        .HasName("PK__Applican__39AE91A8F3B99E3A");

                    b.HasIndex(new[] { "Email" }, "UQ__Applican__A9D1053464909E87")
                        .IsUnique();

                    b.ToTable("Applicants");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.ApplicantVacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicantId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ApplicationStatus")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateOnly>("AttachedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("ScheduleInterview")
                        .HasColumnType("bit");

                    b.Property<string>("VacancyId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id")
                        .HasName("PK__Applican__3214EC07BE91301B");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("VacancyId");

                    b.ToTable("ApplicantVacancy", (string)null);
                });

            modelBuilder.Entity("RecruitmentSystem.Models.ApplicantsRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalComments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaOfExpertise")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CvFilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedInProfile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearsOfExperience")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicantsRequests");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Department", b =>
                {
                    b.Property<string>("DepartmentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("DepartmentId")
                        .HasName("PK__Departme__B2079BED3873E238");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Interview", b =>
                {
                    b.Property<int>("InterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewId"));

                    b.Property<string>("ApplicantId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<DateOnly>("InterviewDate")
                        .HasColumnType("date");

                    b.Property<int>("InterviewerId")
                        .HasColumnType("int");

                    b.Property<string>("Result")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("VacancyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("InterviewId")
                        .HasName("PK__Intervie__C97C58523CDA2172");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("InterviewerId");

                    b.HasIndex("VacancyId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id")
                        .HasName("PK__Users__3214EC0794F0B1E2");

                    b.HasIndex("DepartmentId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534A15B0BD8")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Vacancy", b =>
                {
                    b.Property<string>("VacancyId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateOnly?>("CloseDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DepartmentId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Openings")
                        .HasColumnType("int");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VacancyId")
                        .HasName("PK__Vacancie__6456763F9EC927CD");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.ApplicantVacancy", b =>
                {
                    b.HasOne("RecruitmentSystem.Models.Applicant", "Applicant")
                        .WithMany("ApplicantVacancies")
                        .HasForeignKey("ApplicantId")
                        .HasConstraintName("FK__Applicant__Appli__34C8D9D1");

                    b.HasOne("RecruitmentSystem.Models.Vacancy", "Vacancy")
                        .WithMany("ApplicantVacancies")
                        .HasForeignKey("VacancyId")
                        .HasConstraintName("FK__Applicant__Vacan__35BCFE0A");

                    b.Navigation("Applicant");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Interview", b =>
                {
                    b.HasOne("RecruitmentSystem.Models.Applicant", "Applicant")
                        .WithMany("Interviews")
                        .HasForeignKey("ApplicantId")
                        .IsRequired()
                        .HasConstraintName("FK__Interview__Appli__398D8EEE");

                    b.HasOne("RecruitmentSystem.Models.User", "Interviewer")
                        .WithMany("Interviews")
                        .HasForeignKey("InterviewerId")
                        .IsRequired()
                        .HasConstraintName("FK__Interview__Inter__38996AB5");

                    b.HasOne("RecruitmentSystem.Models.Vacancy", "Vacancy")
                        .WithMany("Interviews")
                        .HasForeignKey("VacancyId")
                        .IsRequired()
                        .HasConstraintName("FK__Interview__Vacan__3A81B327");

                    b.Navigation("Applicant");

                    b.Navigation("Interviewer");

                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.User", b =>
                {
                    b.HasOne("RecruitmentSystem.Models.Department", "Department")
                        .WithMany("Users")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__Users__Departmen__276EDEB3");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Vacancy", b =>
                {
                    b.HasOne("RecruitmentSystem.Models.Department", "Department")
                        .WithMany("Vacancies")
                        .HasForeignKey("DepartmentId")
                        .IsRequired()
                        .HasConstraintName("FK__Vacancies__Depar__2B3F6F97");

                    b.HasOne("RecruitmentSystem.Models.User", "Owner")
                        .WithMany("Vacancies")
                        .HasForeignKey("OwnerId")
                        .IsRequired()
                        .HasConstraintName("FK__Vacancies__Owner__2C3393D0");

                    b.Navigation("Department");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Applicant", b =>
                {
                    b.Navigation("ApplicantVacancies");

                    b.Navigation("Interviews");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Department", b =>
                {
                    b.Navigation("Users");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.User", b =>
                {
                    b.Navigation("Interviews");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("RecruitmentSystem.Models.Vacancy", b =>
                {
                    b.Navigation("ApplicantVacancies");

                    b.Navigation("Interviews");
                });
#pragma warning restore 612, 618
        }
    }
}
